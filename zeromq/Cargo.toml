# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.62.0"
name = "zeromq"
version = "0.4.0"
authors = ["Alexei Kornienko <alexei.kornienko@gmail.com>"]
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "A native Rust implementation of ZeroMQ"
readme = "README.md"
license = "MIT"
repository = "https://github.com/zeromq/zmq.rs"

[lib]
name = "zeromq"
path = "src/lib.rs"
bench = false

[[example]]
name = "stock_client"
path = "examples/stock_client.rs"

[[example]]
name = "task_ventilator"
path = "examples/task_ventilator.rs"

[[example]]
name = "task_worker"
path = "examples/task_worker.rs"

[[example]]
name = "socket_server"
path = "examples/socket_server.rs"

[[example]]
name = "message_client"
path = "examples/message_client.rs"

[[example]]
name = "socket_client"
path = "examples/socket_client.rs"

[[example]]
name = "stock_server"
path = "examples/stock_server.rs"

[[example]]
name = "message_server"
path = "examples/message_server.rs"

[[example]]
name = "task_sink"
path = "examples/task_sink.rs"

[[example]]
name = "weather_server"
path = "examples/weather_server.rs"

[[example]]
name = "forwarder_device"
path = "examples/forwarder_device.rs"

[[example]]
name = "socket_client_with_options"
path = "examples/socket_client_with_options.rs"

[[example]]
name = "message_broker"
path = "examples/message_broker.rs"

[[example]]
name = "weather_client"
path = "examples/weather_client.rs"

[[test]]
name = "message"
path = "tests/message.rs"

[[test]]
name = "req_rep"
path = "tests/req_rep.rs"

[[test]]
name = "req_rep_compliant"
path = "tests/req_rep_compliant.rs"

[[test]]
name = "pub_sub_compliant"
path = "tests/pub_sub_compliant.rs"

[[test]]
name = "helpers"
path = "tests/helpers.rs"

[[test]]
name = "req_router_dealer_rep"
path = "tests/req_router_dealer_rep.rs"

[[test]]
name = "pub_sub"
path = "tests/pub_sub.rs"

[[bench]]
name = "pub_sub"
path = "benches/pub_sub.rs"
bench = false
harness = false

[[bench]]
name = "req_rep"
path = "benches/req_rep.rs"
harness = false

[dependencies.async-dispatcher]
version = "0.1"
optional = true

[dependencies.async-std]
version = "1"
features = ["attributes"]
optional = true

[dependencies.async-trait]
version = "0.1"

[dependencies.asynchronous-codec]
version = "0.7"

[dependencies.bytes]
version = "1"

[dependencies.crossbeam-queue]
version = "0.3"

[dependencies.dashmap]
version = "5"

[dependencies.futures-channel]
version = "0.3"
features = ["sink"]

[dependencies.futures-io]
version = "0.3"

[dependencies.futures-task]
version = "0.3"

[dependencies.futures-util]
version = "0.3"
features = ["sink"]

[dependencies.log]
version = "0.4"

[dependencies.num-traits]
version = "0.2"

[dependencies.once_cell]
version = "1"

[dependencies.parking_lot]
version = "0.12"

[dependencies.rand]
version = "0.8"

[dependencies.regex]
version = "1"
features = [
    "std",
    "unicode-perl",
]
default-features = false

[dependencies.thiserror]
version = "1"

[dependencies.tokio]
version = "1"
features = ["full"]
optional = true

[dependencies.tokio-util]
version = "0.7"
features = ["compat"]
optional = true

[dependencies.uuid]
version = "1"
features = ["v4"]

[dev-dependencies.async-dispatcher]
version = "0.1"
features = ["macros"]

[dev-dependencies.chrono]
version = "0.4"

[dev-dependencies.criterion]
version = "0.5"

[dev-dependencies.hex]
version = "0.4"

[dev-dependencies.pretty_env_logger]
version = "0.5"

[dev-dependencies.zmq2]
version = "0.5"

[features]
all-transport = [
    "ipc-transport",
    "tcp-transport",
]
async-dispatcher-macros = ["async-dispatcher/macros"]
async-dispatcher-runtime = [
    "async-std",
    "async-dispatcher",
]
async-std-runtime = ["async-std"]
default = [
    "tokio-runtime",
    "all-transport",
]
ipc-transport = []
tcp-transport = []
tokio-runtime = [
    "tokio",
    "tokio-util",
]
